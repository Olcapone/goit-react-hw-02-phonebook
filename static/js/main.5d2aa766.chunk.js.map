{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","props","initName","number","initNumber","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","reset","this","type","onChange","Component","defaultProps","ContactList","date","onDelete","map","onClick","shortid","generate","Filter","App","contacts","initContacts","filter","initFilter","addContact","newContact","id","findContact","length","normalizetext","toLowerCase","contact","includes","formSubmitHandler","data","changeFilter","visibleContact","base","deleteContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d2aa766.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    initName: \"\",\n    initNumber: \"\",\n  };\n\n  state = {\n    name: this.props.initName,\n    number: this.props.initNumber,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Tel\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport shortid from \"shortid\";\n\nexport default function ContactList({ date, onDelete }) {\n  return (\n    <ul>\n      {date.map(({ name, number }) => (\n        <li key={shortid.generate()}>\n          {name} : {number}{\" \"}\n          <button type=\"button\" onClick={() => onDelete(name)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </>\n  );\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\n//import PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  static defaultProps = {\n    initContacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    initFilter: \"\",\n  };\n\n  state = {\n    contacts: this.props.initContacts,\n    filter: this.props.initFilter,\n    name: this.props.initName,\n    number: this.props.initNumber,\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n\n    if (filter.length === 0) return contacts;\n\n    const normalizetext = filter.toLowerCase();\n\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizetext));\n  };\n\n  formSubmitHandler = (data) => {\n    this.addContact(data);\n  };\n\n  changeFilter = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  deleteContact() {}\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    let visibleContact = this.findContact();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          date={visibleContact}\n          base={contacts}\n          onDelete={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}